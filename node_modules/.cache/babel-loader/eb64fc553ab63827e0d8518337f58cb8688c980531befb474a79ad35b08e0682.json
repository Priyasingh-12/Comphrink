{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priya\\\\Desktop\\\\taskonly\\\\dataneo\\\\src\\\\Component\\\\Box.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport FileTree from \"./FileTree\";\nimport Editor from \"./Editor\";\nimport Terminal from \"./Terminal\";\nimport SampleSplitter from \"./SampleSplitter\";\nimport { useResizable } from \"react-resizable-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Box = () => {\n  _s();\n  const {\n    isDragging: isFileDragging,\n    position: fileW,\n    splitterProps: fileDragBarProps\n  } = useResizable({\n    axis: \"x\",\n    initial: 250,\n    min: 50\n  });\n  const {\n    isDragging: isTerminalDragging,\n    position: terminalH,\n    splitterProps: terminalDragBarProps\n  } = useResizable({\n    axis: \"y\",\n    initial: 150,\n    min: 50,\n    reverse: true\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-column h-screen bg-dark font-mono color-white overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex grow\",\n        children: [/*#__PURE__*/_jsxDEV(FileTree, {\n          isDragging: isFileDragging,\n          width: fileW\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SampleSplitter, {\n          isDragging: isFileDragging,\n          ...fileDragBarProps,\n          style: {\n            marginLeft: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          style: {\n            marginLeft: \"110px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SampleSplitter, {\n        dir: \"horizontal\",\n        isDragging: isTerminalDragging,\n        ...terminalDragBarProps,\n        style: {\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n        isDragging: isTerminalDragging,\n        height: terminalH,\n        style: {\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Box, \"vCg+nQJlkJC/VjAsUFo2j+o+Jjw=\", false, function () {\n  return [useResizable, useResizable];\n});\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","FileTree","Editor","Terminal","SampleSplitter","useResizable","jsxDEV","_jsxDEV","Fragment","_Fragment","Box","_s","isDragging","isFileDragging","position","fileW","splitterProps","fileDragBarProps","axis","initial","min","isTerminalDragging","terminalH","terminalDragBarProps","reverse","children","className","width","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","marginRight","dir","marginTop","height","_c","$RefreshReg$"],"sources":["C:/Users/Priya/Desktop/taskonly/dataneo/src/Component/Box.jsx"],"sourcesContent":["import React from \"react\";\r\nimport FileTree from \"./FileTree\";\r\nimport Editor from \"./Editor\";\r\nimport Terminal from \"./Terminal\";\r\nimport SampleSplitter from \"./SampleSplitter\";\r\nimport { useResizable } from \"react-resizable-layout\";\r\n\r\nconst Box = () => {\r\n  const {\r\n    isDragging: isFileDragging,\r\n    position: fileW,\r\n    splitterProps: fileDragBarProps\r\n  } = useResizable({\r\n    axis: \"x\",\r\n    initial: 250,\r\n    min: 50\r\n  });\r\n\r\n  const {\r\n    isDragging: isTerminalDragging,\r\n    position: terminalH,\r\n    splitterProps: terminalDragBarProps\r\n  } = useResizable({\r\n    axis: \"y\",\r\n    initial: 150,\r\n    min: 50,\r\n    reverse: true\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={\"flex flex-column h-screen bg-dark font-mono color-white overflow-hidden\"}>\r\n        <div className={\"flex grow\"}>\r\n          <FileTree isDragging={isFileDragging} width={fileW} />\r\n          <SampleSplitter isDragging={isFileDragging} {...fileDragBarProps} style={{ marginLeft: \"10px\" }} />\r\n          <div style={{ width: 10 }} />\r\n          <Editor style={{ marginLeft: \"110px\", marginRight: \"10px\" }} />\r\n        </div>\r\n        {/* ================================================== */}\r\n        <SampleSplitter dir={\"horizontal\"} isDragging={isTerminalDragging} {...terminalDragBarProps} style={{ marginTop: \"10px\" }} />\r\n        <Terminal isDragging={isTerminalDragging} height={terminalH} style={{ marginTop: \"10px\" }} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IACJC,UAAU,EAAEC,cAAc;IAC1BC,QAAQ,EAAEC,KAAK;IACfC,aAAa,EAAEC;EACjB,CAAC,GAAGZ,YAAY,CAAC;IACfa,IAAI,EAAE,GAAG;IACTC,OAAO,EAAE,GAAG;IACZC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAM;IACJR,UAAU,EAAES,kBAAkB;IAC9BP,QAAQ,EAAEQ,SAAS;IACnBN,aAAa,EAAEO;EACjB,CAAC,GAAGlB,YAAY,CAAC;IACfa,IAAI,EAAE,GAAG;IACTC,OAAO,EAAE,GAAG;IACZC,GAAG,EAAE,EAAE;IACPI,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAKmB,SAAS,EAAE,yEAA0E;MAAAD,QAAA,gBACxFlB,OAAA;QAAKmB,SAAS,EAAE,WAAY;QAAAD,QAAA,gBAC1BlB,OAAA,CAACN,QAAQ;UAACW,UAAU,EAAEC,cAAe;UAACc,KAAK,EAAEZ;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDxB,OAAA,CAACH,cAAc;UAACQ,UAAU,EAAEC,cAAe;UAAA,GAAKI,gBAAgB;UAAEe,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAO;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnGxB,OAAA;UAAKyB,KAAK,EAAE;YAAEL,KAAK,EAAE;UAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7BxB,OAAA,CAACL,MAAM;UAAC8B,KAAK,EAAE;YAAEC,UAAU,EAAE,OAAO;YAAEC,WAAW,EAAE;UAAO;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAENxB,OAAA,CAACH,cAAc;QAAC+B,GAAG,EAAE,YAAa;QAACvB,UAAU,EAAES,kBAAmB;QAAA,GAAKE,oBAAoB;QAAES,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAO;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7HxB,OAAA,CAACJ,QAAQ;QAACS,UAAU,EAAES,kBAAmB;QAACgB,MAAM,EAAEf,SAAU;QAACU,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAO;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F;EAAC,gBACN,CAAC;AAEP,CAAC;AAACpB,EAAA,CArCID,GAAG;EAAA,QAKHL,YAAY,EAUZA,YAAY;AAAA;AAAAiC,EAAA,GAfZ5B,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}