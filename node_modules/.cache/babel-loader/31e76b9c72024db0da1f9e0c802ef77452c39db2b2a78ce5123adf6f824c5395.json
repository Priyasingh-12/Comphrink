{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priya\\\\Desktop\\\\taskonly\\\\dataneo\\\\src\\\\Component\\\\SampleSplitter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { cn } from '../utils/cn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleSplitter = ({\n  id = 'drag-bar',\n  dir,\n  isDragging,\n  ...props\n}) => {\n  _s();\n  const [isFocused, setIsFocused] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    \"data-testid\": id,\n    tabIndex: 0,\n    className: cn('sample-drag-bar', dir === 'horizontal' && 'sample-drag-bar--horizontal', (isDragging || isFocused) && 'sample-drag-bar--dragging'),\n    onFocus: () => setIsFocused(true),\n    onBlur: () => setIsFocused(false),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SampleSplitter, \"taoS6m9NZex5dx3pinefKTdpShE=\");\n_c = SampleSplitter;\nexport default SampleSplitter;\nvar _c;\n$RefreshReg$(_c, \"SampleSplitter\");","map":{"version":3,"names":["React","useState","cn","jsxDEV","_jsxDEV","SampleSplitter","id","dir","isDragging","props","_s","isFocused","setIsFocused","tabIndex","className","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Priya/Desktop/taskonly/dataneo/src/Component/SampleSplitter.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { cn } from '../utils/cn'\r\n\r\nconst SampleSplitter = ({\r\n  id = 'drag-bar',\r\n  dir,\r\n  isDragging,\r\n  ...props\r\n}: any) => {\r\n  const [isFocused, setIsFocused] = useState(false)\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      data-testid={id}\r\n      tabIndex={0}\r\n      className={cn(\r\n        'sample-drag-bar',\r\n        dir === 'horizontal' && 'sample-drag-bar--horizontal',\r\n        (isDragging || isFocused) && 'sample-drag-bar--dragging'\r\n      )}\r\n      onFocus={() => setIsFocused(true)}\r\n      onBlur={() => setIsFocused(false)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SampleSplitter\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAGA,CAAC;EACtBC,EAAE,GAAG,UAAU;EACfC,GAAG;EACHC,UAAU;EACV,GAAGC;AACA,CAAC,KAAK;EAAAC,EAAA;EACT,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEG,OAAA;IACEE,EAAE,EAAEA,EAAG;IACP,eAAaA,EAAG;IAChBO,QAAQ,EAAE,CAAE;IACZC,SAAS,EAAEZ,EAAE,CACX,iBAAiB,EACjBK,GAAG,KAAK,YAAY,IAAI,6BAA6B,EACrD,CAACC,UAAU,IAAIG,SAAS,KAAK,2BAC/B,CAAE;IACFI,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,IAAI,CAAE;IAClCI,MAAM,EAAEA,CAAA,KAAMJ,YAAY,CAAC,KAAK,CAAE;IAAA,GAC9BH;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEN,CAAC;AAAAV,EAAA,CAvBKL,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAyBpB,eAAeA,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}